{"version":3,"file":"github-contributions-canvas.cjs.production.min.js","sources":["../src/themes.ts","../src/index.ts"],"sourcesContent":["export const themes = {\n  __test__: {\n    background: \"#ffffff\",\n    text: \"#ffffff\",\n    meta: \"#ffffff\",\n    grade4: \"#196127\",\n    grade3: \"#239a3b\",\n    grade2: \"#7bc96f\",\n    grade1: \"#c6e48b\",\n    grade0: \"#ebedf0\"\n  },\n  standard: {\n    background: \"#ffffff\",\n    text: \"#000000\",\n    meta: \"#666666\",\n    grade4: \"#216e39\",\n    grade3: \"#30a14e\",\n    grade2: \"#40c463\",\n    grade1: \"#9be9a8\",\n    grade0: \"#ebedf0\"\n  },\n  classic: {\n    background: \"#ffffff\",\n    text: \"#000000\",\n    meta: \"#666666\",\n    grade4: \"#196127\",\n    grade3: \"#239a3b\",\n    grade2: \"#7bc96f\",\n    grade1: \"#c6e48b\",\n    grade0: \"#ebedf0\"\n  },\n  githubDark: {\n    background: \"#101217\",\n    text: \"#ffffff\",\n    meta: \"#dddddd\",\n    grade4: \"#27d545\",\n    grade3: \"#10983d\",\n    grade2: \"#00602d\",\n    grade1: \"#003820\",\n    grade0: \"#161b22\"\n  },\n  halloween: {\n    background: \"#ffffff\",\n    text: \"#000000\",\n    meta: \"#666666\",\n    grade4: \"#03001C\",\n    grade3: \"#FE9600\",\n    grade2: \"#FFC501\",\n    grade1: \"#FFEE4A\",\n    grade0: \"#ebedf0\"\n  },\n  teal: {\n    background: \"#ffffff\",\n    text: \"#000000\",\n    meta: \"#666666\",\n    grade4: \"#458B74\",\n    grade3: \"#66CDAA\",\n    grade2: \"#76EEC6\",\n    grade1: \"#7FFFD4\",\n    grade0: \"#ebedf0\"\n  },\n  leftPad: {\n    background: \"#000000\",\n    text: \"#ffffff\",\n    meta: \"#999999\",\n    grade4: \"#F6F6F6\",\n    grade3: \"#DDDDDD\",\n    grade2: \"#A5A5A5\",\n    grade1: \"#646464\",\n    grade0: \"#2F2F2F\"\n  },\n  dracula: {\n    background: \"#181818\",\n    text: \"#f8f8f2\",\n    meta: \"#666666\",\n    grade4: \"#ff79c6\",\n    grade3: \"#bd93f9\",\n    grade2: \"#6272a4\",\n    grade1: \"#44475a\",\n    grade0: \"#282a36\"\n  },\n  blue: {\n    background: \"#181818\",\n    text: \"#C0C0C0\",\n    meta: \"#666666\",\n    grade4: \"#4F83BF\",\n    grade3: \"#416895\",\n    grade2: \"#344E6C\",\n    grade1: \"#263342\",\n    grade0: \"#222222\"\n  },\n  panda: {\n    background: \"#2B2C2F\",\n    text: \"#E6E6E6\",\n    meta: \"#676B79\",\n    grade4: \"#FF4B82\",\n    grade3: \"#19f9d8\",\n    grade2: \"#6FC1FF\",\n    grade1: \"#34353B\",\n    grade0: \"#242526\"\n  },\n  sunny: {\n    background: \"#ffffff\",\n    text: \"#000000\",\n    meta: \"#666666\",\n    grade4: \"#a98600\",\n    grade3: \"#dab600\",\n    grade2: \"#e9d700\",\n    grade1: \"#f8ed62\",\n    grade0: \"#fff9ae\"\n  },\n  pink: {\n    background: \"#ffffff\",\n    text: \"#000000\",\n    meta: \"#666666\",\n    grade4: \"#61185f\",\n    grade3: \"#a74aa8\",\n    grade2: \"#ca5bcc\",\n    grade1: \"#e48bdc\",\n    grade0: \"#ebedf0\"\n  },\n  YlGnBu: {\n    // http://colorbrewer2.org/#type=sequential&scheme=YlGnBu&n=5\n    background: \"#ffffff\",\n    text: \"#000000\",\n    meta: \"#666666\",\n    grade4: \"#253494\",\n    grade3: \"#2c7fb8\",\n    grade2: \"#41b6c4\",\n    grade1: \"#a1dab4\",\n    grade0: \"#ebedf0\"\n  },\n  solarizedDark: {\n    background: \"#002b36\",\n    text: \"#93a1a1\",\n    meta: \"#586e75\",\n    grade4: \"#d33682\",\n    grade3: \"#b58900\",\n    grade2: \"#2aa198\",\n    grade1: \"#268bd2\",\n    grade0: \"#073642\"\n  },\n  solarizedLight: {\n    background: \"#fdf6e3\",\n    text: \"#586e75\",\n    meta: \"#93a1a1\",\n    grade4: \"#6c71c4\",\n    grade3: \"#dc322f\",\n    grade2: \"#cb4b16\",\n    grade1: \"#b58900\",\n    grade0: \"#eee8d5\"\n  }\n};\n","import addWeeks from \"date-fns/addWeeks\";\nimport format from \"date-fns/format\";\nimport getMonth from \"date-fns/getMonth\";\nimport isAfter from \"date-fns/isAfter\";\nimport isBefore from \"date-fns/isBefore\";\nimport parseISO from \"date-fns/parseISO\";\nimport setDay from \"date-fns/setDay\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport { themes } from \"./themes\";\n\ninterface DataStructYear {\n  year: string;\n  total: number;\n  range: {\n    start: string;\n    end: string;\n  };\n}\n\ninterface DataStructContribution {\n  date: string;\n  count: number;\n  color: string;\n  intensity: number;\n}\n\ninterface DataStruct {\n  years: DataStructYear[];\n  contributions: DataStructContribution[];\n}\n\ninterface GraphEntry {\n  date: string;\n  info?: DataStructContribution;\n}\n\ninterface Options {\n  themeName?: keyof typeof themes;\n  customTheme?: Theme;\n  skipHeader?: boolean;\n  skipAxisLabel?: boolean;\n  username: string;\n  data: DataStruct;\n  fontFace?: string;\n  footerText?: string;\n}\n\ninterface DrawYearOptions extends Options {\n  year: DataStructYear;\n  offsetX?: number;\n  offsetY?: number;\n}\n\ninterface DrawMetadataOptions extends Options {\n  width: number;\n  height: number;\n}\n\ninterface Theme {\n  background: string;\n  text: string;\n  meta: string;\n  grade4: string;\n  grade3: string;\n  grade2: string;\n  grade1: string;\n  grade0: string;\n}\n\nfunction getPixelRatio() {\n  if (typeof window === \"undefined\") {\n    return 1;\n  }\n  return window.devicePixelRatio || 1;\n}\n\nconst DATE_FORMAT = \"yyyy-MM-dd\";\nconst boxWidth = 10;\nconst boxMargin = 2;\nconst textHeight = 15;\nconst defaultFontFace = \"IBM Plex Mono\";\nconst headerHeight = 60;\nconst canvasMargin = 20;\nconst yearHeight = textHeight + (boxWidth + boxMargin) * 8 + canvasMargin;\nconst scaleFactor = getPixelRatio();\n\nfunction getTheme(opts: Options): Theme {\n  const { themeName, customTheme } = opts;\n  if (customTheme) {\n    return {\n      background: customTheme.background ?? themes.standard.background,\n      text: customTheme.text ?? themes.standard.text,\n      meta: customTheme.meta ?? themes.standard.meta,\n      grade4: customTheme.grade4 ?? themes.standard.grade4,\n      grade3: customTheme.grade3 ?? themes.standard.grade3,\n      grade2: customTheme.grade2 ?? themes.standard.grade2,\n      grade1: customTheme.grade1 ?? themes.standard.grade1,\n      grade0: customTheme.grade0 ?? themes.standard.grade0\n    };\n  }\n  const name = themeName ?? \"standard\";\n  return themes[name] ?? themes.standard;\n}\n\nfunction getDateInfo(data: DataStruct, date: string) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction drawYear(ctx: CanvasRenderingContext2D, opts: DrawYearOptions) {\n  const {\n    year,\n    offsetX = 0,\n    offsetY = 0,\n    data,\n    fontFace = defaultFontFace\n  } = opts;\n  const theme = getTheme(opts);\n\n  const today = new Date();\n  const thisYear = format(today, \"yyyy\");\n  const lastDate = year.year === thisYear ? today : parseISO(year.range.end);\n  const firstRealDate = parseISO(`${year.year}-01-01`);\n  const firstDate = startOfWeek(firstRealDate);\n\n  let nextDate = firstDate;\n  const firstRowDates: GraphEntry[] = [];\n  const graphEntries: GraphEntry[][] = [];\n\n  while (isBefore(nextDate, lastDate)) {\n    const date = format(nextDate, DATE_FORMAT);\n    firstRowDates.push({\n      date,\n      info: getDateInfo(data, date)\n    });\n    nextDate = addWeeks(nextDate, 1);\n  }\n\n  graphEntries.push(firstRowDates);\n\n  for (let i = 1; i < 7; i += 1) {\n    graphEntries.push(\n      firstRowDates.map(dateObj => {\n        const date = format(setDay(parseISO(dateObj.date), i), DATE_FORMAT);\n        return {\n          date,\n          info: getDateInfo(data, date)\n        };\n      })\n    );\n  }\n  if (!opts.skipHeader) {\n    ctx.textBaseline = \"hanging\";\n    ctx.fillStyle = theme.text;\n    ctx.font = `10px '${fontFace}'`;\n    ctx.fillText(\n      `${year.year}: ${year.total} Contribution${year.total === 1 ? \"\" : \"s\"}${\n        thisYear === year.year ? \" (so far)\" : \"\"\n      }`,\n      offsetX,\n      offsetY - 17\n    );\n  }\n\n  for (let y = 0; y < graphEntries.length; y += 1) {\n    for (let x = 0; x < graphEntries[y].length; x += 1) {\n      const day = graphEntries[y][x];\n      const cellDate = parseISO(day.date);\n      if (isAfter(cellDate, lastDate) || !day.info) {\n        continue;\n      }\n      // @ts-ignore\n      const color = theme[`grade${day.info.intensity}`];\n      ctx.fillStyle = color;\n      ctx.fillRect(\n        offsetX + (boxWidth + boxMargin) * x,\n        offsetY + textHeight + (boxWidth + boxMargin) * y,\n        10,\n        10\n      );\n    }\n  }\n\n  // Draw Month Label\n  let lastCountedMonth = 0;\n  for (let y = 0; y < graphEntries[0].length; y += 1) {\n    const date = parseISO(graphEntries[0][y].date);\n    const month = getMonth(date) + 1;\n    const firstMonthIsDec = month === 12 && y === 0;\n    const monthChanged = month !== lastCountedMonth;\n    if (!opts.skipAxisLabel && monthChanged && !firstMonthIsDec) {\n      ctx.fillStyle = theme.meta;\n      ctx.fillText(\n        format(date, \"MMM\"),\n        offsetX + (boxWidth + boxMargin) * y,\n        offsetY\n      );\n      lastCountedMonth = month;\n    }\n  }\n}\n\nfunction drawMetaData(\n  ctx: CanvasRenderingContext2D,\n  opts: DrawMetadataOptions\n) {\n  const {\n    username,\n    width,\n    height,\n    footerText,\n    data,\n    fontFace = defaultFontFace\n  } = opts;\n  const theme = getTheme(opts);\n  ctx.fillStyle = theme.background;\n  ctx.fillRect(0, 0, width, height);\n\n  if (footerText) {\n    ctx.fillStyle = theme.meta;\n    ctx.textBaseline = \"bottom\";\n    ctx.font = `10px '${fontFace}'`;\n    ctx.fillText(footerText, canvasMargin, height - 5);\n  }\n\n  // chart legend\n  let themeGrades = 5;\n  ctx.fillStyle = theme.text;\n  ctx.fillText(\n    \"Less\",\n    width - canvasMargin - (boxWidth + boxMargin) * themeGrades - 55,\n    37\n  );\n  ctx.fillText(\"More\", width - canvasMargin - 25, 37);\n  for (let x = 0; x < 5; x += 1) {\n    // @ts-ignore\n    ctx.fillStyle = theme[`grade${x}`];\n    ctx.fillRect(\n      width - canvasMargin - (boxWidth + boxMargin) * themeGrades - 27,\n      textHeight + boxWidth,\n      10,\n      10\n    );\n    themeGrades -= 1;\n  }\n\n  ctx.fillStyle = theme.text;\n  ctx.textBaseline = \"hanging\";\n  ctx.font = `20px '${fontFace}'`;\n  ctx.fillText(`@${username} on GitHub`, canvasMargin, canvasMargin);\n\n  let totalContributions = 0;\n  for (const year of data.years) {\n    totalContributions += year.total;\n  }\n  ctx.font = `10px '${fontFace}'`;\n  ctx.fillText(\n    `Total Contributions: ${totalContributions}`,\n    canvasMargin,\n    canvasMargin + 30\n  );\n\n  ctx.beginPath();\n  ctx.moveTo(canvasMargin, 55 + 10);\n  ctx.lineTo(width - canvasMargin, 55 + 10);\n  ctx.strokeStyle = theme.grade0;\n  ctx.stroke();\n}\n\nexport function drawContributions(canvas: HTMLCanvasElement, opts: Options) {\n  const { data } = opts;\n  let headerOffset = 0;\n  if (!opts.skipHeader) {\n    headerOffset = headerHeight;\n  }\n  const height =\n    data.years.length * yearHeight + canvasMargin + headerOffset + 10;\n  const width = 53 * (boxWidth + boxMargin) + canvasMargin * 2;\n\n  canvas.width = width * scaleFactor;\n  canvas.height = height * scaleFactor;\n\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    throw new Error(\"Could not get 2d context from Canvas\");\n  }\n\n  ctx.scale(scaleFactor, scaleFactor);\n  ctx.textBaseline = \"hanging\";\n  if (!opts.skipHeader) {\n    drawMetaData(ctx, {\n      ...opts,\n      width,\n      height,\n      data\n    });\n  }\n\n  data.years.forEach((year, i) => {\n    const offsetY = yearHeight * i + canvasMargin + headerOffset + 10;\n    const offsetX = canvasMargin;\n    drawYear(ctx, {\n      ...opts,\n      year,\n      offsetX,\n      offsetY,\n      data\n    });\n  });\n}\n\nexport { themes } from \"./themes\";\n"],"names":["themes","__test__","background","text","meta","grade4","grade3","grade2","grade1","grade0","standard","classic","githubDark","halloween","teal","leftPad","dracula","blue","panda","sunny","pink","YlGnBu","solarizedDark","solarizedLight","getPixelRatio","window","devicePixelRatio","scaleFactor","getTheme","opts","themeName","customTheme","getDateInfo","data","date","contributions","find","contrib","canvas","headerOffset","skipHeader","height","textHeight","years","length","width","ctx","getContext","Error","scale","textBaseline","username","footerText","fontFace","theme","fillStyle","fillRect","font","fillText","themeGrades","x","totalContributions","total","canvasMargin","beginPath","moveTo","lineTo","strokeStyle","stroke","drawMetaData","forEach","year","i","offsetX","offsetY","today","Date","thisYear","format","lastDate","parseISO","range","end","firstRealDate","nextDate","startOfWeek","firstRowDates","graphEntries","isBefore","push","info","addWeeks","map","dateObj","setDay","y","day","cellDate","isAfter","intensity","lastCountedMonth","month","getMonth","skipAxisLabel","drawYear"],"mappings":"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"}